SIZE = 0.7
SCANLINES = 16

extract obj_props

import "src/"
extract import "frame.spwn"
bmp_reader = import "bmp_reader.spwn"

image = bmp_reader.read_bmp($.readfile("test.bmp", "bin"))
screen = @screen::new(130, 45 + image.height * SIZE, image.width, image.height, size=SIZE, duration=500, scanlines_nr=SCANLINES)

// i = @counter::new(0, bits=0)
// while_loop(() => true, () {
//     row = image.image[i.to_const(0..image.height)]

//     for j in 0..image.width {
//         color = row[j]
//         -> screen.scanline.groups[j].pulse(@chroma::from_rgb8(color[0], color[1], color[2]), hold=0.1)
//     }

//     screen.render_line!

//     i += 1
//     wait(1/20)
// }, delay = 0)

img_len = image.image.length
for i in 0..SCANLINES..image.height {
    fwait(i / SCANLINES + 1)
    $.print(i)
    
    for sc in 0..SCANLINES {
        row_idx = i + sc

        if row_idx >= img_len { continue }

        row = image.image[row_idx]

        for j in 0..image.width {
            color = row[j]
            -> screen.scanlines[sc].groups[j].pulse(@chroma::from_rgb8(color[0], color[1], color[2]))
        }

    }
    screen.render_lines!
}